{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n};\n\nconst flatpickrInstance = flatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', function () {\n  const selectedDate = flatpickrInstance.selectedDates[0];\n  const currentTime = Date.now();\n  let timeDifference = selectedDate - currentTime;\n\n  const timerInterval = setInterval(function () {\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n    document.querySelector('[data-days]').textContent =\n      days >= 0 ? addLeadingZero(days) : '00';\n    document.querySelector('[data-hours]').textContent =\n      hours >= 0 ? addLeadingZero(hours) : '00';\n    document.querySelector('[data-minutes]').textContent =\n      minutes >= 0 ? addLeadingZero(minutes) : '00';\n    document.querySelector('[data-seconds]').textContent =\n      seconds >= 0 ? addLeadingZero(seconds) : '00';\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown timer has reached the end date.',\n      });\n    }\n\n    timeDifference -= 1000;\n  }, 1000);\n});\n\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  document.querySelector('[data-start]').disabled = true;\n});\n"],"names":["options","selectedDates","iziToast","flatpickrInstance","flatpickr","convertMs","ms","days","hours","minutes","seconds","selectedDate","currentTime","timeDifference","timerInterval","addLeadingZero","value"],"mappings":"2GAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACIA,EAAc,GAEhB,IAAI,MACzBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAED,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAEMC,EAAoBC,EAAU,mBAAoBJ,CAAO,EAE/D,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,UAAY,CAC3E,MAAMC,EAAeR,EAAkB,cAAc,GAC/CS,EAAc,KAAK,MACzB,IAAIC,EAAiBF,EAAeC,EAEpC,MAAME,EAAgB,YAAY,UAAY,CAC5C,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YACpCN,GAAQ,EAAIQ,EAAeR,CAAI,EAAI,KACrC,SAAS,cAAc,cAAc,EAAE,YACrCC,GAAS,EAAIO,EAAeP,CAAK,EAAI,KACvC,SAAS,cAAc,gBAAgB,EAAE,YACvCC,GAAW,EAAIM,EAAeN,CAAO,EAAI,KAC3C,SAAS,cAAc,gBAAgB,EAAE,YACvCC,GAAW,EAAIK,EAAeL,CAAO,EAAI,KAEvCG,GAAkB,IACpB,cAAcC,CAAa,EAC3BZ,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,2CACjB,CAAO,GAGHW,GAAkB,GACnB,EAAE,GAAI,CACT,CAAC,EAED,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACpC,CAEA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,SAAS,cAAc,cAAc,EAAE,SAAW,EACpD,CAAC"}